# ===========================================
# Extra Bash Completions (lazy-loaded)
# Martin Stadler (mestadler)
# Using custom-built binaries from /usr/local/bin
# ===========================================

# --- GitHub CLI ---
if command -v gh >/dev/null 2>&1; then
  eval "$(gh completion -s bash)"
fi

# --- Kubernetes / kubectl (+ aliases) ---
if [ -x /usr/local/bin/kubectl ]; then
  source <(/usr/local/bin/kubectl completion bash)
  complete -o default -F __start_kubectl kubectl 2>/dev/null
  complete -o default -F __start_kubectl k 2>/dev/null
  complete -o default -F __start_kubectl kg 2>/dev/null
  complete -o default -F __start_kubectl kd 2>/dev/null
fi

# --- Helm ---
if [ -x /usr/local/bin/helm ]; then
  source <(/usr/local/bin/helm completion bash)
fi

# --- Flux ---
if [ -x /usr/local/bin/flux ]; then
  source <(/usr/local/bin/flux completion bash)
fi

# --- ORAS ---
if [ -x /usr/local/bin/oras ]; then
  source <(/usr/local/bin/oras completion bash)
fi

# --- Cosign ---
if [ -x /usr/local/bin/cosign ]; then
  source <(/usr/local/bin/cosign completion bash)
fi

# --- Skopeo ---
if [ -x /usr/local/bin/skopeo ]; then
  source <(/usr/local/bin/skopeo completion bash) 2>/dev/null || true
fi

# --- k0rdent / k0s ---
if command -v k0rdent >/dev/null 2>&1; then
  source <(k0rdent completion bash) 2>/dev/null || true
fi
if command -v k0s >/dev/null 2>&1; then
  source <(k0s completion bash) 2>/dev/null || true
fi

# --- Docker / nerdctl ---
if command -v docker >/dev/null 2>&1; then
  source <(docker completion bash) 2>/dev/null || true
  complete -o default -F __start_docker d 2>/dev/null || true
fi
if command -v nerdctl >/dev/null 2>&1; then
  source <(nerdctl completion bash) 2>/dev/null || true
  complete -o default -F __start_nerdctl nc 2>/dev/null || true
fi

# --- KVM / Virtualisation (best-effort) ---
# virsh completion is usually shipped via bash-completion and autoloaded.
# If a standalone script exists, try common locations:
if command -v virsh >/dev/null 2>&1; then
  for f in \
    /usr/share/bash-completion/completions/virsh \
    /etc/bash_completion.d/virsh \
    /usr/share/virt-manager/virsh-completion.bash
  do
    [ -f "$f" ] && . "$f" && break
  done
fi

# KubeVirt (virtctl), if present:
if command -v virtctl >/dev/null 2>&1; then
  source <(virtctl completion bash) 2>/dev/null || true
fi
